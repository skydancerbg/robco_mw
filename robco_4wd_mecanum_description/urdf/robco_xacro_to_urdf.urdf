<?xml version="1.0" encoding="utf-8"?>
<!-- =================================================================================== -->
<!-- |    This document was autogenerated by xacro from robco_4wd_mecanum.xacro        | -->
<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | -->
<!-- =================================================================================== -->
<robot name="robco_4wd_mecanum">
  <!-- RobcoMW 4wd mecanum wheel robot description-->
  <!-- Created by Stefan Chivarov-->
  <!-- IICT-BAS BG - Version 1.0 from Feb. 15th, 2021. -->
  <!--  NOTE:
      <box>  The origin of the box is in its center.
      <cylinder>  The origin of the cylinder is in its center. cylinder_coordinates.png
      <joint>     This is the transform from the parent link to the child link. 
                  The joint is located at the origin of the child link. -->
  <!-- Common macros file -->
  <!-- Created by Stefan Chivarov-->
  <!-- IICT-BAS BG - Version 1.0 from Feb. 20th, 2021. -->
  <!-- **** RP LIDAR A2 **** -->
  <!-- SHOULD Z ROTATE THE LIDAR JOINT 180 !!!  -->
  <!-- <joint name="rplidar_joint" type="fixed">
    <axis xyz="0 1 0" />
    <origin xyz="0.02 0 0.058" rpy="0 0 3.14"/>
    <parent link="base_link"/>
    <child link="laser"/>
  </joint> -->
  <!-- ! USE THIS ORIGIN TO ALLIGN THE DAE VISUAL: -->
  <!-- <origin xyz="0 0 0" rpy="1.5707 0 4.71"/> -->
  <!--     
  <xacro:macro name="rplidar_a2" params="name *origin">
  <link name="${name}_link">
    <visual>
    <xacro:insert_block name="origin" />
      <geometry>
        <mesh filename="package://robco_4wd_mecanum_description/meshes/rplidar.dae" scale="0.001 0.001 0.001"/>
      </geometry>
    </visual> 
    <collision>
    <xacro:insert_block name="origin" />
      <geometry>
        <mesh filename="package://robco_4wd_mecanum_description/meshes/rplidar.dae" scale="0.001 0.001 0.001"/>
      </geometry>
    </collision>  
    <inertial>
      <mass value="1e-5" />
      <xacro:insert_block name="origin" />
      <inertia ixx="0" ixy="0" ixz="0" iyy="0" iyz="0" izz="0" />
    </inertial>
  </link> 
  </xacro:macro>     -->
  <gazebo>
    <!--<plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
      <robotNamespace>/</robotNamespace>
    </plugin>-->
    <plugin filename="librobco_ros_force_based_move.so" name="robco_ros_force_based_move">
      <commandTopic>cmd_vel</commandTopic>
      <odometryTopic>odom</odometryTopic>
      <odometryFrame>odom</odometryFrame>
      <odometryRate>25.0</odometryRate>
      <robotBaseFrame>base_footprint</robotBaseFrame>
      <cmdVelTimeOut>0.25</cmdVelTimeOut>
      <publishOdometryTf>0</publishOdometryTf>
      <yaw_velocity_p_gain>1.0</yaw_velocity_p_gain>
      <x_velocity_p_gain>15.0</x_velocity_p_gain>
      <y_velocity_p_gain>15.0</y_velocity_p_gain>
      <max_x_velocity>0.6</max_x_velocity>
      <max_y_velocity>0.6</max_y_velocity>
      <max_yaw_velocity>0.5</max_yaw_velocity>
    </plugin>
  </gazebo>
  <!-- All static links get collapsed down to base_link in Gazebo, so that's
       the one to apply the colour to (in Gazebo 5+). -->
  <gazebo reference="base_footprint">
    <material>Gazebo/Yellow</material>
    <gravity>true</gravity>
  </gazebo>
  <gazebo reference="base_link">
    <!-- <material>Gazebo/Yellow</material> -->
    <material>Gazebo/DarkGrey</material>
  </gazebo>
  <gazebo reference="electronics_module_link">
    <material>Gazebo/Grey</material>
  </gazebo>
  <gazebo reference="left_sensor">
    <material>Gazebo/Black</material>
  </gazebo>
  <gazebo reference="front_sensor">
    <material>Gazebo/Black</material>
  </gazebo>
  <gazebo reference="right_sensor">
    <material>Gazebo/Black</material>
  </gazebo>
  <gazebo reference="rear_sensor">
    <material>Gazebo/Black</material>
  </gazebo>
  <gazebo reference="front_left_wheel_shaft_link">
    <material>Gazebo/Black</material>
  </gazebo>
  <gazebo reference="back_left_wheel_shaft_link">
    <material>Gazebo/Black</material>
  </gazebo>
  <gazebo reference="front_right_wheel_shaft_link">
    <material>Gazebo/Black</material>
  </gazebo>
  <gazebo reference="back_right_wheel_shaft_link">
    <material>Gazebo/Black</material>
  </gazebo>
  <!-- Wheel friction to zero, as movement is handled by applying forces at the body level. -->
  <gazebo reference="front_left_wheel_link">
    <material>Gazebo/Grey</material>
    <mu1>0.0</mu1>
    <mu2>0.0</mu2>
  </gazebo>
  <gazebo reference="back_left_wheel_link">
    <material>Gazebo/Grey</material>
    <mu1>0.0</mu1>
    <mu2>0.0</mu2>
  </gazebo>
  <gazebo reference="front_right_wheel_link">
    <material>Gazebo/Grey</material>
    <mu1>0.0</mu1>
    <mu2>0.0</mu2>
  </gazebo>
  <gazebo reference="back_right_wheel_link">
    <material>Gazebo/Grey</material>
    <mu1>0.0</mu1>
    <mu2>0.0</mu2>
  </gazebo>
  <gazebo reference="chassis_joint_visualizer">
    <material>Gazebo/Red</material>
    <mu1>0.0</mu1>
    <mu2>0.0</mu2>
  </gazebo>
  <!--  ****  REALSENSE  ****  -->
  <gazebo reference="realsense_link">
    <material>Gazebo/Grey</material>
  </gazebo>
  <!--  ****  RP LIDAR  ****  -->
  <!-- https://github.com/husarion/rosbot_description/blob/master/src/rosbot_description/urdf/rosbot.gazebo -->
  <!-- If you cant't use your GPU comment RpLidar using GPU and uncomment RpLidar using CPU 
    gazebo plugin. -->
  <!-- Noise parameters based on published spec for rplidar laser
    achieving "+-30mm" accuracy at range < 10m.  A mean of 0.0m and
    stddev of 0.01m will put 99.7% of samples within 0.03m of the true
    reading. -->
  <gazebo reference="laser">
    <material>Gazebo/Grey</material>
  </gazebo>
  <!-- If you cant't use your GPU comment RpLidar using GPU and uncomment RpLidar using CPU 
    gazebo plugin. -->
  <!-- Noise parameters based on published spec for rplidar laser
    achieving "+-30mm" accuracy at range < 10m.  A mean of 0.0m and
    stddev of 0.01m will put 99.7% of samples within 0.03m of the true
    reading. -->
  <!-- RpLidar A2 using GPU -->
  <!--<gazebo reference="laser">
    <sensor type="gpu_ray" name="head_rplidar_sensor">
      <pose>0 0 0.5 0 0 0</pose>
      <visualize>false</visualize>
      <update_rate>40</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>720</samples>
            <resolution>1</resolution>
            <min_angle>-3.14159265</min_angle>
            <max_angle>3.14159265</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.2</min>
          <max>12.0</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="gazebo_ros_head_rplidar_controller" filename="libgazebo_ros_gpu_laser.so">
        <topicName>scan</topicName>
        <frameName>laser</frameName>
      </plugin>
    </sensor>
  </gazebo>-->
  <!-- RpLidar A3 using GPU -->
  <!-- <gazebo reference="laser">
    <sensor type="gpu_ray" name="head_rplidar_sensor">
      <pose>0 0 0.06 0 0 0</pose>
      <visualize>false</visualize>
      <update_rate>40</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>720</samples>
            <resolution>1</resolution>
            <min_angle>-3.14159265</min_angle>
            <max_angle>3.14159265</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.2</min>
          <max>25.0</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="gazebo_ros_head_rplidar_controller" filename="libgazebo_ros_gpu_laser.so">
        <topicName>scan</topicName>
        <frameName>laser</frameName>
      </plugin>
    </sensor>
  </gazebo> -->
  <!-- RpLidar A2 using CPU -->
  <gazebo reference="laser">
    <sensor name="head_rplidar_sensor" type="ray">
      <pose>0 0 0.06 0 0 0</pose>
      <visualize>false</visualize>
      <!-- <visualize>true</visualize> -->
      <update_rate>40</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>720</samples>
            <resolution>1</resolution>
            <min_angle>-3.14159265</min_angle>
            <max_angle>3.14159265</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.2</min>
          <max>12.0</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin filename="libgazebo_ros_laser.so" name="gazebo_ros_head_rplidar_controller">
        <topicName>scan</topicName>
        <frameName>laser</frameName>
      </plugin>
    </sensor>
  </gazebo>
  <!-- RpLidar A3 using CPU -->
  <!-- <gazebo reference="laser">
    <sensor type="ray" name="head_rplidar_sensor">
      <pose>0 0 0.06 0 0 0</pose>
      <visualize>false</visualize>
      <update_rate>40</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>720</samples>
            <resolution>1</resolution>
            <min_angle>-3.14159265</min_angle>
            <max_angle>3.14159265</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.2</min>
          <max>25.0</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="gazebo_ros_head_rplidar_controller" filename="libgazebo_ros_laser.so">
        <topicName>scan</topicName>
        <frameName>laser</frameName>
      </plugin>
    </sensor>
  </gazebo> -->
  <!-- ****  ASTRA **** -->
  <!-- https://github.com/husarion/rosbot_description/blob/master/src/rosbot_description/urdf/rosbot.gazebo -->
  <gazebo reference="camera_link">
    <material>Gazebo/Grey</material>
  </gazebo>
  <gazebo reference="camera_link">
    <sensor name="openni_camera_camera" type="depth">
      <always_on>1</always_on>
      <visualize>true</visualize>
      <camera>
        <horizontal_fov>1.047</horizontal_fov>
        <image>
          <width>640</width>
          <height>480</height>
          <format>R8G8B8</format>
        </image>
        <depth_camera>

        </depth_camera>
        <clip>
          <near>0.1</near>
          <far>100</far>
        </clip>
      </camera>
      <plugin filename="libgazebo_ros_openni_kinect.so" name="kinect_controller">
        <alwaysOn>true</alwaysOn>
        <updateRate>10.0</updateRate>
        <cameraName>camera</cameraName>
        <frameName>camera_depth_frame</frameName>
        <imageTopicName>rgb/image_raw</imageTopicName>
        <depthImageTopicName>depth/image_raw</depthImageTopicName>
        <pointCloudTopicName>depth/points</pointCloudTopicName>
        <cameraInfoTopicName>rgb/camera_info</cameraInfoTopicName>
        <depthImageCameraInfoTopicName>depth/camera_info</depthImageCameraInfoTopicName>
        <pointCloudCutoff>0.4</pointCloudCutoff>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
        <CxPrime>0.0</CxPrime>
        <Cx>0.0</Cx>
        <Cy>0.0</Cy>
        <focalLength>0.0</focalLength>
      </plugin>
    </sensor>
  </gazebo>
  <!--  ****  IMU ****  -->
  <!-- https://github.com/husarion/rosbot_description/blob/master/src/rosbot_description/urdf/rosbot.gazebo -->
  <gazebo reference="top">
    <gravity>true</gravity>
    <sensor name="imu_sensor" type="imu">
      <always_on>true</always_on>
      <update_rate>10</update_rate>
      <visualize>true</visualize>
      <topic>imu</topic>
      <plugin filename="libgazebo_ros_imu_sensor.so" name="imu_plugin">
        <topicName>imu</topicName>
        <bodyName>imu_link</bodyName>
        <updateRateHZ>10.0</updateRateHZ>
        <gaussianNoise>0.0</gaussianNoise>
        <xyzOffset>0 0 0</xyzOffset>
        <rpyOffset>0 0 0</rpyOffset>
        <frameName>imu_link</frameName>
      </plugin>
      <pose>0 0 0 0 0 0</pose>
    </sensor>
  </gazebo>
  <!-- ****  RANGE SENSORS **** -->
  <!-- https://github.com/husarion/rosbot_description/blob/master/src/rosbot_description/urdf/rosbot.gazebo -->
  <gazebo reference="range_fl">
    <sensor name="range_fl" type="ray">
      <pose>0 0 0 0 0 0</pose>
      <update_rate>5</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>5</samples>
            <resolution>1.0</resolution>
            <min_angle>-0.05</min_angle>
            <max_angle>0.05</max_angle>
          </horizontal>
          <vertical>
            <samples>5</samples>
            <resolution>1</resolution>
            <min_angle>-0.05</min_angle>
            <max_angle>0.05</max_angle>
          </vertical>
        </scan>
        <range>
          <min>0.01</min>
          <max>0.9</max>
          <resolution>0.01</resolution>
        </range>
      </ray>
      <plugin filename="libgazebo_ros_range.so" name="gazebo_ros_range">
        <gaussianNoise>0.005</gaussianNoise>
        <alwaysOn>true</alwaysOn>
        <updateRate>5</updateRate>
        <topicName>range/fl</topicName>
        <frameName>range_fl</frameName>
        <fov>0.1</fov>
        <radiation>ultrasound</radiation>
      </plugin>
    </sensor>
  </gazebo>
  <gazebo reference="range_fr">
    <sensor name="range_fr" type="ray">
      <pose>0 0 0 0 0 0</pose>
      <update_rate>5</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>5</samples>
            <resolution>1.0</resolution>
            <min_angle>-0.05</min_angle>
            <max_angle>0.05</max_angle>
          </horizontal>
          <vertical>
            <samples>5</samples>
            <resolution>1</resolution>
            <min_angle>-0.05</min_angle>
            <max_angle>0.05</max_angle>
          </vertical>
        </scan>
        <range>
          <min>0.01</min>
          <max>0.9</max>
          <resolution>0.01</resolution>
        </range>
      </ray>
      <plugin filename="libgazebo_ros_range.so" name="gazebo_ros_range">
        <gaussianNoise>0.005</gaussianNoise>
        <alwaysOn>true</alwaysOn>
        <updateRate>5</updateRate>
        <topicName>range/fr</topicName>
        <frameName>range_fr</frameName>
        <fov>0.1</fov>
        <radiation>ultrasound</radiation>
      </plugin>
    </sensor>
  </gazebo>
  <gazebo reference="range_rl">
    <sensor name="range_rl" type="ray">
      <pose>0 0 0 0 0 0</pose>
      <update_rate>5</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>5</samples>
            <resolution>1.0</resolution>
            <min_angle>-0.05</min_angle>
            <max_angle>0.05</max_angle>
          </horizontal>
          <vertical>
            <samples>5</samples>
            <resolution>1</resolution>
            <min_angle>-0.05</min_angle>
            <max_angle>0.05</max_angle>
          </vertical>
        </scan>
        <range>
          <min>0.01</min>
          <max>0.9</max>
          <resolution>0.01</resolution>
        </range>
      </ray>
      <plugin filename="libgazebo_ros_range.so" name="gazebo_ros_range">
        <gaussianNoise>0.005</gaussianNoise>
        <alwaysOn>true</alwaysOn>
        <updateRate>5</updateRate>
        <topicName>range/rl</topicName>
        <frameName>range_rl</frameName>
        <fov>0.1</fov>
        <radiation>ultrasound</radiation>
      </plugin>
    </sensor>
  </gazebo>
  <gazebo reference="range_rr">
    <sensor name="range_rr" type="ray">
      <pose>0 0 0 0 0 0</pose>
      <update_rate>5</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>5</samples>
            <resolution>1.0</resolution>
            <min_angle>-0.05</min_angle>
            <max_angle>0.05</max_angle>
          </horizontal>
          <vertical>
            <samples>5</samples>
            <resolution>1</resolution>
            <min_angle>-0.05</min_angle>
            <max_angle>0.05</max_angle>
          </vertical>
        </scan>
        <range>
          <min>0.01</min>
          <max>0.9</max>
          <resolution>0.01</resolution>
        </range>
      </ray>
      <plugin filename="libgazebo_ros_range.so" name="gazebo_ros_range">
        <gaussianNoise>0.005</gaussianNoise>
        <alwaysOn>true</alwaysOn>
        <updateRate>5</updateRate>
        <topicName>range/rr</topicName>
        <frameName>range_rr</frameName>
        <fov>0.1</fov>
        <radiation>ultrasound</radiation>
      </plugin>
    </sensor>
  </gazebo>
  <!--<xacro:include filename="$(find robot_description)/urdf/gazebo" />-->
  <!-- <xacro:include filename="$(find robot_description)/urdf/materials.xacro" />
  <xacro:include filename="$(find robot_description)/urdf/robco_properties.xacro" />
  <xacro:include filename="$(find robot_description)/urdf/robco_calibration.xacro" /> -->
  <!--########### Hardware macros #####################################################-->
  <!-- <xacro:include filename="$(find robot_description)/urdf/macros.xacro" />  
  <xacro:include filename="$(find robot_description)/urdf/robco_macros.xacro" />  
  <xacro:include filename="$(find robot_description)/urdf/robco_2wd_base_macro.xacro" />  
  <xacro:include filename="$(find robot_description)/urdf/robco_body_macro.xacro" />
  <xacro:include filename="$(find robot_description)/urdf/robco_imu_macro.xacro" />
  <xacro:include filename="$(find robot_description)/urdf/robco_rplidar_macro.xacro" />
  <xacro:include filename="$(find robot_description)/urdf/robco_mover4_macro.xacro" />
  <xacro:include filename="$(find robot_description)/urdf/robco_kinect_mount_macro.xacro" />  -->
  <!--###################################################################################-->
  <!--###################################################################################-->
  <material name="yellow">
    <color rgba="0.8 0.8 0.0 1.0"/>
  </material>
  <material name="black">
    <color rgba="0.15 0.15 0.15 1.0"/>
  </material>
  <material name="dark_grey">
    <color rgba="0.2 0.2 0.2 1.0"/>
  </material>
  <material name="light_grey">
    <color rgba="0.4 0.4 0.4 1.0"/>
  </material>
  <material name="Black">
    <color rgba="0.0 0.0 0.0 1.0"/>
  </material>
  <material name="Blue">
    <color rgba="0.0 0.0 0.8 1.0"/>
  </material>
  <material name="Green">
    <color rgba="0.0 0.8 0.0 1.0"/>
  </material>
  <material name="Grey">
    <color rgba="0.2 0.2 0.2 1.0"/>
  </material>
  <material name="DarkGrey">
    <color rgba="0.1 0.1 0.1 1.0"/>
  </material>
  <material name="Orange">
    <color rgba="1.0 0.423529411765 0.0392156862745 1.0"/>
  </material>
  <material name="Brown">
    <color rgba="0.870588235294 0.811764705882 0.764705882353 1.0"/>
  </material>
  <material name="Red">
    <color rgba="0.8 0.0 0.0 1.0"/>
  </material>
  <material name="White">
    <color rgba="1.0 1.0 1.0 1.0"/>
  </material>
  <!--###################################################################################-->
  <!--###################################################################################-->
  <!-- ####### GENERIC CONSTANTS ##### -->
  <!-- ####### ROBOT ORIGINAL CHASSIS CONSTANTS ##### -->
  <!-- in kg/mm-->
  <!-- in kg/mm-->
  <!-- in kg-->
  <!-- <xacro:property name="base_x_origin_to_wheel_origin" value="0.0" /> -->
  <!-- <xacro:property name="base_y_origin_to_wheel_origin" value="0.2" /> VAJNO!!!!!! da se izmeri pak - ot tova zawisi odometriata!!!!!!!!!!! -->
  <!-- <xacro:property name="base_z_origin_to_wheel_origin" value="${-(base_plate_botom_from_base_frame_Z_offset - wheel_radius)}" /> -->
  <!-- ####### END ROBOT CONSTANTS ##### -->
  <!--###################################################################################-->
  <!--###################################################################################-->
  <!-- base_footprint is a fictitious link(frame) that is on the ground right below base_link origin, navigation stack depends on this frame -->
  <link name="base_footprint">
    <!-- <pose>0 0 0 0 0 0</pose> -->
  </link>
  <!-- The joint to the base_frame (the world) is set at height, equal to the distance form the ground to the bottom of the chassis -->
  <joint name="base_link_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 0 0.0402"/>
    <parent link="base_footprint"/>
    <child link="base_link"/>
  </joint>
  <link name="base_link">
    <visual>
      <!-- The chassis is represented with a box and the origin of that box is in it's center. 
    That's why, in order to visualize properly, we need to add half of the box height to 
    the distance from the ground allready defined in the joint. -->
      <origin rpy="0 0 0" xyz="0 0 0.0445"/>
      <geometry>
        <!-- <mesh filename="package://robco_4wd_mecanum_description/meshes/robco_base_link.STL" scale="0.001 0.001 0.001"/> -->
        <box size="0.675 0.53 0.089"/>
      </geometry>
      <!-- <material name="light_grey" /> -->
      <material name="Orange"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.675 0.53 0.089"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="16.2"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="0.389908194037" ixy="0.0" ixz="0.0" iyy="0.625786849685" iyz="0.0" izz="0.994308352276"/>
    </inertial>
  </link>
  <!-- WHEEL SHAFTS -->
  <joint name="front_left_wheel_shaft_joint" type="fixed">
    <parent link="base_link"/>
    <child link="front_left_wheel_shaft_link"/>
    <origin rpy="0 0 0" xyz="0.3075 0.265 0.0345"/>
  </joint>
  <link name="front_left_wheel_shaft_link">
    <visual>
      <origin rpy="1.570796327 0 0" xyz="0 0.0115 0"/>
      <geometry>
        <cylinder length="0.023" radius="0.015"/>
      </geometry>
      <material name="Red"/>
    </visual>
    <collision>
      <origin rpy="1.570796327 0 0" xyz="0 0.0115 0"/>
      <geometry>
        <cylinder length="0.023" radius="0.015"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.06"/>
      <origin rpy="1.570796327 0 0" xyz="0 0.0115 0"/>
      <inertia ixx="6.019997592e-06" ixy="0.0" ixz="0.0" iyy="6.019997592e-06" iyz="0.0" izz="6.75e-06"/>
    </inertial>
  </link>
  <joint name="back_left_wheel_shaft_joint" type="fixed">
    <parent link="base_link"/>
    <child link="back_left_wheel_shaft_link"/>
    <origin rpy="0 0 0" xyz="-0.3075 0.265 0.0345"/>
  </joint>
  <link name="back_left_wheel_shaft_link">
    <visual>
      <origin rpy="1.570796327 0 0" xyz="0 0.0115 0"/>
      <geometry>
        <cylinder length="0.023" radius="0.015"/>
      </geometry>
      <material name="Red"/>
    </visual>
    <collision>
      <origin rpy="1.570796327 0 0" xyz="0 0.0115 0"/>
      <geometry>
        <cylinder length="0.023" radius="0.015"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.06"/>
      <origin rpy="1.570796327 0 0" xyz="0 0.0115 0"/>
      <inertia ixx="6.019997592e-06" ixy="0.0" ixz="0.0" iyy="6.019997592e-06" iyz="0.0" izz="6.75e-06"/>
    </inertial>
  </link>
  <joint name="front_right_wheel_shaft_joint" type="fixed">
    <parent link="base_link"/>
    <child link="front_right_wheel_shaft_link"/>
    <origin rpy="0 0 0" xyz="0.3075 -0.265 0.0345"/>
  </joint>
  <link name="front_right_wheel_shaft_link">
    <visual>
      <origin rpy="1.570796327 0 0" xyz="0 -0.0115 0"/>
      <geometry>
        <cylinder length="0.023" radius="0.015"/>
      </geometry>
      <material name="Red"/>
    </visual>
    <collision>
      <origin rpy="1.570796327 0 0" xyz="0 -0.0115 0"/>
      <geometry>
        <cylinder length="0.023" radius="0.015"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.06"/>
      <origin rpy="1.570796327 0 0" xyz="0 -0.0115 0"/>
      <inertia ixx="6.019997592e-06" ixy="0.0" ixz="0.0" iyy="6.019997592e-06" iyz="0.0" izz="6.75e-06"/>
    </inertial>
  </link>
  <joint name="back_right_wheel_shaft_joint" type="fixed">
    <parent link="base_link"/>
    <child link="back_right_wheel_shaft_link"/>
    <origin rpy="0 0 0" xyz="-0.3075 -0.265 0.0345"/>
  </joint>
  <link name="back_right_wheel_shaft_link">
    <visual>
      <origin rpy="1.570796327 0 0" xyz="0 -0.0115 0"/>
      <geometry>
        <cylinder length="0.023" radius="0.015"/>
      </geometry>
      <material name="Red"/>
    </visual>
    <collision>
      <origin rpy="1.570796327 0 0" xyz="0 -0.0115 0"/>
      <geometry>
        <cylinder length="0.023" radius="0.015"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.06"/>
      <origin rpy="1.570796327 0 0" xyz="0 -0.0115 0"/>
      <inertia ixx="6.019997592e-06" ixy="0.0" ixz="0.0" iyy="6.019997592e-06" iyz="0.0" izz="6.75e-06"/>
    </inertial>
  </link>
  <!-- WHEELS -->
  <joint name="front_left_wheel_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 0.023 0"/>
    <parent link="front_left_wheel_shaft_link"/>
    <child link="front_left_wheel_link"/>
    <axis xyz="0 1 0"/>
  </joint>
  <link name="front_left_wheel_link">
    <visual>
      <origin rpy="0 0 0" xyz="0 0.023 0"/>
      <geometry>
        <mesh filename="package://robco_4wd_mecanum_description/meshes/mecanum_wheel_left.STL" scale="0.001 0.00092 0.00152"/>
      </geometry>
      <material name="light_grey"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0.023 0"/>
      <geometry>
        <cylinder length="0.046" radius="0.0762"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.82"/>
      <origin rpy="0 0 0" xyz="0 0.023 0"/>
      <inertia ixx="0.00133491299937" ixy="0.0" ixz="0.0" iyy="0.00133491299937" iyz="0.0" izz="0.0023806404"/>
    </inertial>
  </link>
  <joint name="back_left_wheel_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 0.023 0"/>
    <parent link="back_left_wheel_shaft_link"/>
    <child link="back_left_wheel_link"/>
    <axis xyz="0 1 0"/>
  </joint>
  <link name="back_left_wheel_link">
    <visual>
      <origin rpy="0 0 0" xyz="0 0.023 0"/>
      <geometry>
        <mesh filename="package://robco_4wd_mecanum_description/meshes/mecanum_wheel_left.STL" scale="0.001 0.00092 0.00152"/>
      </geometry>
      <material name="light_grey"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0.023 0"/>
      <geometry>
        <cylinder length="0.046" radius="0.0762"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.82"/>
      <origin rpy="0 0 0" xyz="0 0.023 0"/>
      <inertia ixx="0.00133491299937" ixy="0.0" ixz="0.0" iyy="0.00133491299937" iyz="0.0" izz="0.0023806404"/>
    </inertial>
  </link>
  <joint name="front_right_wheel_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 -0.023 0"/>
    <parent link="front_right_wheel_shaft_link"/>
    <child link="front_right_wheel_link"/>
    <axis xyz="0 1 0"/>
  </joint>
  <link name="front_right_wheel_link">
    <visual>
      <origin rpy="0 0 0" xyz="0 -0.023 0"/>
      <geometry>
        <mesh filename="package://robco_4wd_mecanum_description/meshes/mecanum_wheel_right.STL" scale="0.001 0.00092 0.00152"/>
      </geometry>
      <material name="light_grey"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 -0.023 0"/>
      <geometry>
        <cylinder length="0.046" radius="0.0762"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.82"/>
      <origin rpy="0 0 0" xyz="0 -0.023 0"/>
      <inertia ixx="0.00133491299937" ixy="0.0" ixz="0.0" iyy="0.00133491299937" iyz="0.0" izz="0.0023806404"/>
    </inertial>
  </link>
  <joint name="back_right_wheel_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 -0.023 0"/>
    <parent link="back_right_wheel_shaft_link"/>
    <child link="back_right_wheel_link"/>
    <axis xyz="0 1 0"/>
  </joint>
  <link name="back_right_wheel_link">
    <visual>
      <origin rpy="0 0 0" xyz="0 -0.023 0"/>
      <geometry>
        <mesh filename="package://robco_4wd_mecanum_description/meshes/mecanum_wheel_right.STL" scale="0.001 0.00092 0.00152"/>
      </geometry>
      <material name="light_grey"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 -0.023 0"/>
      <geometry>
        <cylinder length="0.046" radius="0.0762"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.82"/>
      <origin rpy="0 0 0" xyz="0 -0.023 0"/>
      <inertia ixx="0.00133491299937" ixy="0.0" ixz="0.0" iyy="0.00133491299937" iyz="0.0" izz="0.0023806404"/>
    </inertial>
  </link>
  <!-- **** ELECTRONICS BOX (MODULE) - height 100 mm ****  -->
  <!-- /batteries height is 76 mm whenlaying on the side. -->
  <!-- can accomadete, not only Raspberry PI 4 with passive cooling case,  -->
  <!-- but also  Intel NUC in the big case 51 mm height/ -->
  <joint name="electronics_box_link_joint" type="fixed">
    <parent link="base_link"/>
    <child link="electronics_box_link"/>
    <origin rpy="0 0 0" xyz="0 0 0.089"/>
  </joint>
  <link name="electronics_box_link">
    <visual>
      <!-- The chassis is represented with a box and the origin of that box is in it's center. 
    That's why, in order to visualize properly, we need to add half of the box height to 
    the distance from the ground allready defined in the joint. -->
      <origin rpy="0 0 0" xyz="0 0 0.05"/>
      <geometry>
        <!-- <mesh filename="package://robco_4wd_mecanum_description/meshes/robco_base_link.STL" scale="0.001 0.001 0.001"/> -->
        <box size="0.675 0.53 0.1"/>
      </geometry>
      <!-- <material name="light_grey" /> -->
      <material name="yellow"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.675 0.53 0.1"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="15"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="0.36362485455" ixy="0.0" ixz="0.0" iyy="0.582031017188" iyz="0.0" izz="0.920655881738"/>
    </inertial>
  </link>
  <joint name="torso_standoff_link_joint" type="fixed">
    <parent link="electronics_box_link"/>
    <child link="torso_standoff_link"/>
    <origin rpy="0 0 0" xyz="0 0 0.1"/>
  </joint>
  <link name="torso_standoff_link">
    <visual>
      <!-- The chassis is represented with a box and the origin of that box is in it's center. 
    That's why, in order to visualize properly, we need to add half of the box height to 
    the distance from the ground allready defined in the joint. -->
      <origin rpy="0 0 0" xyz="0 0 0.2034"/>
      <geometry>
        <!-- <mesh filename="package://robco_4wd_mecanum_description/meshes/robco_base_link.STL" scale="0.001 0.001 0.001"/> -->
        <box size="0.04 0.04 0.4068"/>
      </geometry>
      <!-- <material name="light_grey" /> -->
      <material name="Blue"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.04 0.04 0.4068"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.99666"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="0.0138773421123" ixy="0.0" ixz="0.0" iyy="0.0138773421123" iyz="0.0" izz="0.00026577589369"/>
    </inertial>
  </link>
  <!--  **** RP LIDAR A2 **** -->
  <!-- Position the RP Lidar 10 mm from the front edge of the electronics box, to avoid the chance of collision, just in case. -->
  <!-- RP Lidar's /diameter 75.7 mm/ center point needs to be at x = (337.5 - 10) - (75.7/2) = 289.65 mm from the box center -->
  <!-- ! The Joint is positioned on top plane of the electronics box module -->
  <!-- **** RP LIDAR A2 CYLINDER VISUALISATION -->
  <!-- <xacro:fixed_joint name="rplidar" parent_name="electronics_box_link" child_name="rplidar_link" color="Red">
    <origin xyz="${289.65*SCALE_mm_to_m} 0 ${100*SCALE_mm_to_m}" rpy="0 0 0" />
  </xacro:fixed_joint> -->
  <!-- RP Lidar A2 cylinder visual -->
  <!-- <xacro:cylinder_link name="rplidar" radius="${75.7/2*SCALE_mm_to_m}" lenght="${40.80*SCALE_mm_to_m}" mass="${0.190}" color="Orange">
    <origin xyz="0 0 ${40.80/2*SCALE_mm_to_m}" rpy="0 0 0" />
  </xacro:cylinder_link> -->
  <!-- Mount point (joint) visual marker -->
  <!-- <xacro:box_link name="rplidar" lenght="0.01" width="0.01" height="0.01" mass="0.01" color="Orange">
    <origin xyz="0 0 0" rpy="0 0 0" />
  </xacro:box_link> -->
  <!-- <xacro:fixed_joint name="rplidar" parent_name="electronics_box_link" child_name="rplidar_link" color="Grey">
    <origin xyz="${289.65*SCALE_mm_to_m} 0 ${100*SCALE_mm_to_m}" rpy="0 0 3.14" />
  </xacro:fixed_joint> -->
  <!-- <xacro:rplidar_a2 name="rplidar">
    <origin xyz="0 0 0" rpy="1.5707 0 4.71"/>
  </xacro:rplidar_a2> -->
  <joint name="rplidar_joint" type="fixed">
    <axis xyz="0 1 0"/>
    <origin rpy="0 0 3.14" xyz="0.28965 0 0.1"/>
    <parent link="electronics_box_link"/>
    <child link="laser"/>
  </joint>
  <!-- rplidar Laser -->
  <link name="laser">
    <visual>
      <origin rpy="1.5707 0 4.71" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://robco_4wd_mecanum_description/meshes/rplidar.dae" scale="0.001 0.001 0.001"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="1.5707 0 4.71" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://robco_4wd_mecanum_description/meshes/rplidar.dae" scale="0.001 0.001 0.001"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="1e-5"/>
      <origin rpy="1.5707 0 4.71" xyz="0 0 0"/>
      <inertia ixx="0" ixy="0" ixz="0" iyy="0" iyz="0" izz="0"/>
    </inertial>
  </link>
  <!-- **** ORBBEC ASTRA RGBD CAMERA  ****  -->
  <joint name="astra_joint" type="fixed">
    <axis xyz="0 0 0"/>
    <!-- <origin xyz="${(20)*SCALE_mm_to_m} 0 ${(100+350)*SCALE_mm_to_m}" rpy="0 1.8326 0" /> -->
    <origin rpy="0 0.261799 0" xyz="0.075 0 0.45"/>
    <parent link="electronics_box_link"/>
    <child link="camera_link"/>
  </joint>
  <link name="camera_link">
    <collision>
      <origin rpy="0 0 0" xyz="0.02 0 0"/>
      <geometry>
        0
        
        <box size="0.001 0.001 0.001"/>
      </geometry>
    </collision>
    <visual>
      <origin rpy="1.5707 0 1.5707" xyz="-0.01 0 -0.03"/>
      <geometry>
        <mesh filename="package://robco_4wd_mecanum_description/meshes/astra.dae" scale="0.001 0.001 0.001"/>
      </geometry>
    </visual>
    <inertial>
      <mass value="1e-5"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="0" ixy="0" ixz="0" iyy="0" iyz="0" izz="0"/>
    </inertial>
  </link>
  <joint name="camera_optical_joint" type="fixed">
    <origin rpy="-1.57079632679 0 -1.57079632679" xyz="0 0 0"/>
    <parent link="camera_link"/>
    <child link="camera_rgb_frame"/>
  </joint>
  <link name="camera_rgb_frame">
  </link>
  <joint name="camera_depth_joint" type="fixed">
    <origin rpy="-1.57079632679 0 -1.57079632679" xyz="0 0 0"/>
    <parent link="camera_link"/>
    <child link="camera_depth_frame"/>
  </joint>
  <link name="camera_depth_frame">
  </link>
  <!-- ******************** =============================== ************************************ -->
  <!-- **** Intel RealSense Depth Camera D435 ****  -->
  <!-- dimensions 90 mm x 25 mm x 25 mm    weight 258.5477 g. -->
  <!-- ! The Joint is positioned on the front plane of the torso standoff at height of ?? -->
  <!-- <xacro:fixed_joint name="realsense" parent_name="electronics_box_link" child_name="realsense_link" color="Red">
    <origin xyz="${(20)*SCALE_mm_to_m} 0 ${(100+350)*SCALE_mm_to_m}" rpy="0 1.8326 0" />
  </xacro:fixed_joint>

  <xacro:box_link name="realsense" lenght="${25*SCALE_mm_to_m}" width="${90*SCALE_mm_to_m}" height="${25*SCALE_mm_to_m}" mass="0.2585477" color="Orange">
    <origin xyz="0 0 0" rpy="0 0 0" />
  </xacro:box_link> -->
  <!-- JOINT AND LINK VISUALIZERS -->
  <!-- Camera direction VISUALIZER -->
  <!-- <xacro:fixed_joint name="module_visualizer" parent_name="realsense_link" child_name="realsense_visualizer_link" color="Red">
    <origin xyz="0 0 0" rpy="0 0 0" />
  </xacro:fixed_joint>

  <xacro:box_link name="realsense_visualizer" lenght="0.01" width="0.01" height="0.1" mass="0.01" color="Red">
       <origin xyz="0 0 0" rpy="0 0 0" />
  </xacro:box_link> -->
  <!-- <xacro:fixed_joint name="module_visualizer" parent_name="base_link" child_name="module_visualizer_link" color="Red">
    <origin xyz="0 0 0.5" rpy="0 0 0" />
  </xacro:fixed_joint>

  <xacro:box_link name="module_visualizer" lenght="0.05" width="0.05" height="0.05" mass="0.01" color="Red">
       <origin xyz="0 0 0" rpy="0 0 0" />
  </xacro:box_link> -->
  <!-- Include URM04 ultrasonic range finders -->
  <!-- <xacro:include filename="$(find robco_4wd_mecanum_description)/urdf/urm04_sensor.xacro"/> -->
  <!-- front sensor -->
  <!-- <xacro:urm04_sensor frame_name="front_sensor" ros_topic="front_sensor" update_rate="10" min_range="0.04" max_range="2.5" horizontal_field_of_view="1.04" vertical_field_of_view="0.04" ray_count="2" /> -->
  <!-- left sensor -->
  <!-- <xacro:urm04_sensor frame_name="left_sensor" ros_topic="left_sensor" update_rate="10" min_range="0.04" max_range="2.5" horizontal_field_of_view="1.04" vertical_field_of_view="0.04" ray_count="2" /> -->
  <!-- right sensor -->
  <!-- <xacro:urm04_sensor frame_name="right_sensor" ros_topic="right_sensor" update_rate="10" min_range="0.04" max_range="2.5" horizontal_field_of_view="1.04" vertical_field_of_view="0.04" ray_count="2" /> -->
  <!-- rear sensor -->
  <!-- <xacro:urm04_sensor frame_name="rear_sensor" ros_topic="rear_sensor" update_rate="10" min_range="0.04" max_range="2.5" horizontal_field_of_view="1.04" vertical_field_of_view="0.04" ray_count="2" /> -->
</robot>

